{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./src/components/card.js","webpack:///./src/pages/index.js","webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["props","ref","classes","className","_props$raised","raised","other","Paper","root","elevation","withStyles","overflow","name","_props$disableSpacing","disableSpacing","spacing","display","alignItems","padding","marginLeft","_props$component","component","Component","paddingBottom","useStyles","makeStyles","theme","card","minWidth","backgroundColor","color","cardActions","justifyContent","button","title","marginBottom","fontSize","pos","SimpleCard","content","buttonLink","Typography","Button","size","flexWrap","IndexPage","Fragment","variant","align","Grid","container","justify","item","href","Link","to","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","_props$alignContent","alignContent","_props$alignItems","classNameProp","_props$container","_props$direction","direction","_props$item","_props$justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","StyledGrid","boxSizing","width","margin","flexDirection","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid"],"mappings":"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","file":"component---src-pages-index-js-5e41214108e90782f4b2.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return (/*#__PURE__*/React.createElement(Paper, _extends({\n      className: clsx(classes.root, className),\n      elevation: raised ? 8 : 1,\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return (/*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return (/*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    minWidth: 275,\n    backgroundColor: 'black',\n    color: 'white',\n\n  },\n  cardActions: {\n    justifyContent: 'center',\n  },\n  button: {\n    backgroundColor: 'orange',\n    color: 'white',\n  },\n  title: {\n    marginBottom: 16,\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nfunction SimpleCard({ content, buttonLink }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography component=\"p\">\n            {content}\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          <Button \n            className={classes.button} \n            size=\"small\"\n          >\n            {buttonLink}\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n\nSimpleCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default SimpleCard;","import React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonAppBar from '../components/AppBar'\nimport Card from '../components/card'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '../components/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: 'grey'\n  },\n}));\n\nexport default function IndexPage() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <ButtonAppBar/>\n      <Typography variant=\"h4\" align='center'>\n        SouthFACT\n      </Typography>\n      <Typography variant=\"h6\" align='center'>\n        Tools to identify and quantify\n      </Typography>\n      <Typography variant=\"h6\" align='center'>\n        changes in southern forests.\n      </Typography>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <Grid\n        container\n        justify=\"center\"\n        spacing={10}\n      >\n        <Grid item>\n          <Card \n           content=\"Recent and historical yearly changes\"\n           buttonLink={<a href=\"https://southfact.github.io/southfact-map-v2/dist/#Home\">Forest Change Viewer</a>}\n          />\n        </Grid>\n        <Grid item>\n          <Card \n            content=\"Identify change for specific areas and times\"\n            buttonLink={<a href=\"https://code.earthengine.google.com/5513af5039ed666eda62492d0d7b7e9d?hideCode=true\">Create Custom Requests</a>}\n          />\n        </Grid>\n        <Grid item>\n          <Card \n            content=\"Learn more about the tools and this site\"\n            buttonLink={<Link to='/about' color='inherit'>About</Link>}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return (/*#__PURE__*/React.createElement(Component, _extends({\n      className: className,\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}