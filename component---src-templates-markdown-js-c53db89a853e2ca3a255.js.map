{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/markdown.js"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","faqTemplate","page","data","variant","frontmatter","title","body","pageQuery"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,kCClCF,8GA4BeS,UAdf,SAAqBV,GACnB,IAAMW,EAAOX,EAAMY,KAAKjB,IACxB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYkB,QAAQ,MACjBF,EAAKG,YAAYC,OAEpB,kBAAC,IAAD,KACE,kBAAC,cAAD,KAAcJ,EAAKK,SASpB,IAAMC,EAAS","file":"component---src-templates-markdown-js-c53db89a853e2ca3a255.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Typography from '@material-ui/core/Typography';\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n//import { TinaCMS } from 'tinacms'\n//import { remarkForm } from 'gatsby-tinacms-remark'\n//import { HtmlFieldPlugin, MarkdownFieldPlugin } from 'react-tinacms-editor'\n\n/*const cms = new TinaCMS()\n\ncms.plugins.add(HtmlFieldPlugin)\ncms.plugins.add(MarkdownFieldPlugin)*/\n\nfunction faqTemplate(props) {\n  const page = props.data.mdx\n  return (\n    <Layout>\n      <Typography variant=\"h3\">\n        {page.frontmatter.title}\n      </Typography>\n      <Typography>\n        <MDXRenderer>{page.body}</MDXRenderer>\n      </Typography>\n    </Layout>\n  )\n}\n\nexport default faqTemplate\n//export default remarkForm(faqTemplate)\n\nexport const pageQuery = graphql`\n  query faqQuery ($slug: String!) {\n    mdx(fields: {slug: {eq: $slug}}) {\n      id\n      body\n      frontmatter {\n        title\n        description\n      }\n    }\n  }\n`"],"sourceRoot":""}