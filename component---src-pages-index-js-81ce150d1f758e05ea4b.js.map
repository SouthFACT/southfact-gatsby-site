{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./src/components/card.js","webpack:///./src/pages/index.js"],"names":["props","ref","classes","className","_props$raised","raised","other","Paper","root","elevation","withStyles","overflow","name","_props$disableSpacing","disableSpacing","spacing","display","alignItems","padding","marginLeft","_props$component","component","Component","paddingBottom","useStyles","makeStyles","theme","card","minWidth","backgroundColor","color","cardActions","justifyContent","button","textTransform","title","marginBottom","fontSize","pos","SimpleCard","content","buttonLink","Typography","Button","size","IndexPage","Grid","maxWidth","style","height","variant","align","container","justify","item","lg","sm","href","Link","to"],"mappings":"2NAaI,EAAO,cAAiB,SAAcA,EAAOC,GAC/C,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,WAErE,OAAqB,gBAAoBO,EAAA,EAAO,YAAS,CACrDJ,UAAW,YAAKD,EAAQM,KAAML,GAC9BM,UAAWJ,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA8BQ,SAAAI,EAAA,GA/CK,CAElBF,KAAM,CACJG,SAAU,WA4CoB,CAChCC,KAAM,WADO,CAEZ,GCnCC,EAAc,cAAiB,SAAqBZ,EAAOC,GAC7D,IAAIY,EAAwBb,EAAMc,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DX,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBG,EAAQ,YAAyBN,EAAO,CAAC,iBAAkB,UAAW,cAE1E,OAAqB,gBAAoB,MAAO,YAAS,CACrDG,UAAW,YAAKD,EAAQM,KAAML,GAAYW,GAAkBZ,EAAQa,SACpEd,IAAKA,GACJK,OA8BQ,SAAAI,EAAA,GAvDK,CAElBF,KAAM,CACJQ,QAAS,OACTC,WAAY,SACZC,QAAS,GAIXH,QAAS,CACP,yBAA0B,CACxBI,WAAY,KA4CgB,CAChCP,KAAM,kBADO,CAEZ,GChDC,EAAc,cAAiB,SAAqBZ,EAAOC,GAC7D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBiB,EAAmBpB,EAAMqB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDd,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,cAErE,OAAqB,gBAAoBsB,EAAW,YAAS,CACzDnB,UAAW,YAAKD,EAAQM,KAAML,GAC9BF,IAAKA,GACJK,OA0BQ,SAAAI,EAAA,GA7CK,CAElBF,KAAM,CACJU,QAAS,GACT,eAAgB,CACdK,cAAe,MAwCa,CAChCX,KAAM,kBADO,CAEZ,G,wBC5CGY,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,IACVC,gBAAiB,UACjBC,MAAO,WAETC,YAAa,CACXC,eAAgB,UAElBC,OAAQ,CACNJ,gBAAiB,UACjBC,MAAO,UACPI,cAAe,OACf,UAAW,CACTL,gBAAiB,YAGrBM,MAAO,CACLC,aAAc,GACdC,SAAU,IAEZC,IAAK,CACHF,aAAc,QAgCHG,MA5Bf,YAA8C,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACvBvC,EAAUsB,IAEhB,OACE,6BACE,kBAAC,EAAD,CAAMrB,UAAWD,EAAQyB,MACvB,kBAAC,EAAD,KACE,kBAACe,EAAA,EAAD,KACGF,IAGL,kBAAC,EAAD,CAAarC,UAAWD,EAAQ6B,aAC9B,kBAACY,EAAA,EAAD,CACExC,UAAWD,EAAQ+B,OACnBW,KAAK,SAEJH,O,wBC5CE,SAASI,IAEtB,OACE,kBAACC,EAAA,EAAD,CAAMC,SAAS,KAAKC,MAAO,CAAEnB,gBAAiB,UAAWoB,OAAQ,UAC/D,kBAAC,IAAD,MACA,kBAACP,EAAA,EAAD,CAAYQ,QAAQ,KAAKC,MAAM,SAASH,MAAO,CAAElB,MAAO,UAAxD,aAGA,kBAACY,EAAA,EAAD,CAAYQ,QAAQ,KAAKC,MAAM,SAASH,MAAO,CAAElB,MAAO,UAAxD,kCAGA,kBAACY,EAAA,EAAD,CAAYQ,QAAQ,KAAKC,MAAM,SAASH,MAAO,CAAElB,MAAO,UAAxD,gCAGA,6BACA,6BACA,6BACA,6BACA,6BACA,kBAACgB,EAAA,EAAD,CACEM,WAAS,EACTC,QAAQ,SACRtC,QAAS,GAET,kBAAC+B,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAAC,EAAD,CACChB,QAAQ,uCACRC,WAAY,uBAAGgB,KAAK,2DAAR,2BAGf,kBAACX,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAAC,EAAD,CACEhB,QAAQ,+CACRC,WAAY,uBAAGgB,KAAK,sFAAR,6BAGhB,kBAACX,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAAC,EAAD,CACEhB,QAAQ,2CACRC,WAAY,kBAACiB,EAAA,EAAD,CAAMC,GAAG,SAAS7B,MAAM,WAAxB,cA9CxB","file":"component---src-pages-index-js-81ce150d1f758e05ea4b.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return (/*#__PURE__*/React.createElement(Paper, _extends({\n      className: clsx(classes.root, className),\n      elevation: raised ? 8 : 1,\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return (/*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return (/*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    minWidth: 275,\n    backgroundColor: '#101012',\n    color: '#FCFCF5',\n  },\n  cardActions: {\n    justifyContent: 'center',\n  },\n  button: {\n    backgroundColor: '#9F5222',\n    color: '#FCFCF5',\n    textTransform: \"none\",\n    '&:hover': {\n      backgroundColor: '#D9A265',\n    },\n  },\n  title: {\n    marginBottom: 16,\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nfunction SimpleCard({ content, buttonLink }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography>\n            {content}\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          <Button \n            className={classes.button} \n            size=\"small\"\n          >\n            {buttonLink}\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n\nSimpleCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default SimpleCard;","import React from \"react\"\nimport ButtonAppBar from '../components/AppBar'\nimport Card from '../components/card'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '../components/Link';\n\nexport default function IndexPage() {\n\n  return (\n    <Grid maxWidth=\"xl\" style={{ backgroundColor: '#707070', height: '100vh' }}>\n      <ButtonAppBar/>\n      <Typography variant=\"h4\" align='center' style={{ color: 'white'}}>\n        SouthFACT\n      </Typography>\n      <Typography variant=\"h6\" align='center' style={{ color: 'white'}}>\n        Tools to identify and quantify\n      </Typography>\n      <Typography variant=\"h6\" align='center' style={{ color: 'white'}}>\n        changes in southern forests.\n      </Typography>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <Grid\n        container\n        justify=\"center\"\n        spacing={3}\n      >\n        <Grid item lg={3} sm={6}>\n          <Card \n           content=\"Recent and historical yearly changes\"\n           buttonLink={<a href=\"https://southfact.github.io/southfact-map-v2/dist/#Home\">Forest Change Viewer</a>}\n          />\n        </Grid>\n        <Grid item lg={3} sm={6}>\n          <Card \n            content=\"Identify change for specific areas and times\"\n            buttonLink={<a href=\"https://code.earthengine.google.com/5513af5039ed666eda62492d0d7b7e9d?hideCode=true\">Create Custom Requests</a>}\n          />\n        </Grid>\n        <Grid item lg={3} sm={6}>\n          <Card \n            content=\"Learn more about the tools and this site\"\n            buttonLink={<Link to='/about' color='inherit'>About</Link>}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}"],"sourceRoot":""}